<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>50</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Init the surface
surf = noone;
// Init the square sprite
wheel = noone;

old_d = 0;

// For use in rotating the wheel
mouse_xprevious = mouse_x;
mouse_yprevious = mouse_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Destroy the surface
if (surface_exists(surface)) {
    surface_free(surface);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw the surface
x_pos = 150;
y_pos = 150;
radius = 150;

draw_set_circle_precision(128); // Set the circle precision for all circles drawn after this

if (sprite_exists(wheel)) {
    draw_sprite_ext(wheel, 0, 185, 255, 1, 1, image_angle, c_white, 1);
    
    if (global.reset_wheel_position == true) {
        image_angle = 0;
        global.reset_wheel_position = false;
    }
    
    // Rotate the sprite
    if(mouse_check_button_pressed(mb_left))
    {
        old_d = point_direction(x,y,mouse_x,mouse_y);
    }
    else if(mouse_check_button(mb_left))
    {
        var new_d = point_direction(x,y,mouse_x,mouse_y);
        image_angle+=angle_difference(new_d,old_d);
        old_d = new_d;
    }
} else {
    surface = surface_create(300,300);
    surface_set_target(surface);
    draw_wheel(x_pos, y_pos, radius);
    draw_circle(x_pos, y_pos, 5, false); // dot in the middle of the circle

    surface_reset_target();
    wheel = sprite_create_from_surface(surface, 0, 0, 300, 300, false, false, 150, 150);
    surface_free(surface);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
